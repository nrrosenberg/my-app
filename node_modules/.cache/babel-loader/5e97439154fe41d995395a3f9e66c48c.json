{"ast":null,"code":"var _jsxFileName = \"/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/src/components/Posts.jsx\";\nimport React, { Component } from 'react';\nimport '../styles/navigation.css';\nimport '../styles/tables.css';\nimport { getPosts, getTopPosts } from '../services/posts';\nimport { getComments, getFreelancerName } from '../services/posts'; //import { id } from 'postcss-selector-parser';\n\nclass Posts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: '',\n      links: '',\n      comments: '',\n      names: []\n    };\n    this.fetchTopPosts = this.fetchTopPosts.bind(this);\n    this.fetchPosts = this.fetchPosts.bind(this);\n    this.fetchComments = this.fetchComments.bind(this);\n    this.fetchFreelancerName = this.fetchFreelancerName.bind(this);\n  }\n\n  async fetchPosts() {\n    const {\n      data,\n      links\n    } = await getPosts(localStorage.getItem('token'));\n    const post_array = Object.values(data);\n    const names_array = [];\n    post_array.forEach(async post => {\n      const username = await this.fetchFreelancerName(Object.values(post.attributes)[1]);\n      names_array.push(username);\n    });\n    this.setState({\n      posts: post_array,\n      links: links,\n      comments: '',\n      names: names_array\n    });\n  }\n\n  async fetchTopPosts() {\n    const {\n      data,\n      links\n    } = await getTopPosts(localStorage.getItem('token'));\n    this.setState({\n      posts: Object.values(data),\n      links: links,\n      comments: ''\n    });\n  }\n\n  async fetchComments(postId) {\n    const {\n      data\n    } = await getComments(localStorage.getItem('token'), postId);\n    this.setState({\n      comments: data\n    });\n  }\n\n  async fetchFreelancerName(freelancerId) {\n    const {\n      data\n    } = await getFreelancerName(localStorage.getItem('token'), freelancerId);\n    return Object.values(data.attributes)[3];\n  }\n\n  render() {\n    let posts;\n\n    if (this.state.posts) {\n      let j = 0;\n      posts = this.state.posts.map((post, i) => {\n        if (this.state.names) {\n          const username = this.state.names[j];\n          console.log(username);\n          j += 1;\n        }\n\n        return /*#__PURE__*/React.createElement(\"tbody\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }, username), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }, post.attributes.description), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"table-img\",\n          src: post.attributes.media,\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }, post.attributes.likes), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.fetchComments(post.attributes.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }\n        }, \" Comments\"))));\n      });\n    }\n\n    let comments;\n\n    if (this.state.comments) {\n      comments = this.state.comments.map((comment, i) => {\n        return /*#__PURE__*/React.createElement(\"tbody\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }\n        }, comment.attributes.freelancer), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }, comment.attributes.description)));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-horizontal-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.fetchTopPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \" Top 10 (Likes)\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.fetchPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \" Todos los Posts\")))), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \"Freelancer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Media\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Likes\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Comentarios\"))), posts), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Freelancer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Description\"))), comments));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/src/components/Posts.jsx"],"names":["React","Component","getPosts","getTopPosts","getComments","getFreelancerName","Posts","constructor","state","posts","links","comments","names","fetchTopPosts","bind","fetchPosts","fetchComments","fetchFreelancerName","data","localStorage","getItem","post_array","Object","values","names_array","forEach","post","username","attributes","push","setState","postId","freelancerId","render","j","map","i","console","log","description","media","likes","id","comment","freelancer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport '../styles/navigation.css'\nimport '../styles/tables.css'\nimport {getPosts, getTopPosts} from  '../services/posts' \nimport { getComments, getFreelancerName } from '../services/posts';\n//import { id } from 'postcss-selector-parser';\n\n\nclass Posts extends Component {\n    constructor(){\n      super()\n      this.state = {\n        posts: '',\n        links: '',\n        comments: '',\n        names: [],\n      }\n      this.fetchTopPosts = this.fetchTopPosts.bind(this);\n      this.fetchPosts = this.fetchPosts.bind(this);\n      this.fetchComments = this.fetchComments.bind(this);\n      this.fetchFreelancerName = this.fetchFreelancerName.bind(this);\n    }\n\n    async fetchPosts() {\n        const {data, links} = await getPosts(localStorage.getItem('token'));\n        const post_array = Object.values(data);\n        const names_array = [];\n        post_array.forEach(async (post)=>{\n          const username =  await this.fetchFreelancerName(Object.values(post.attributes)[1])\n          names_array.push(username);\n        });\n        this.setState({ posts: post_array, links: links, comments: '', names: names_array});\n      }\n    async fetchTopPosts() {\n        const {data, links} = await getTopPosts(localStorage.getItem('token'));\n        this.setState({ posts: Object.values(data), links: links, comments: ''});\n      }\n      async fetchComments(postId) {\n        const {data} = await getComments(localStorage.getItem('token'), postId);\n        this.setState({ comments: data});\n      }\n      async fetchFreelancerName(freelancerId) {\n        const {data} = await getFreelancerName(localStorage.getItem('token'), freelancerId);\n        \n        return (Object.values(data.attributes)[3])\n      }\n\n\n  render() {\n      let posts;\n      if (this.state.posts){\n        let j = 0;\n        posts = this.state.posts.map((post, i) => {\n        if (this.state.names){\n\n          \n          const username = this.state.names[j];\n          console.log(username)\n          j += 1;\n        }\n          return (\n            <tbody key= {i}>\n              <tr>\n                <td>{username}</td>\n                <td>{post.attributes.description}</td>\n                <td><img className='table-img' src={post.attributes.media} alt=\"\" /></td>\n                <td>{post.attributes.likes}</td>\n                <td><button onClick={()=>this.fetchComments(post.attributes.id)}> Comments</button></td>\n              </tr>\n            </tbody>\n          ); \n        });\n      }\n      let comments;\n      if (this.state.comments){\n        comments = this.state.comments.map((comment, i) => {\n          return (\n            <tbody  key= {i}>\n              <tr>\n                <td>{comment.attributes.freelancer}</td>\n                <td>{comment.attributes.description}</td>\n                \n                \n              </tr>\n            </tbody>\n          ); \n        });\n      }\n\n      return (\n        <div className='container'>\n          <h2>Posts</h2>\n          \n          <div>\n          <ul className=\"list-group list-group-horizontal-sm\">\n            <li className=\"\">\n              <button onClick={this.fetchTopPosts}> Top 10 (Likes)</button>\n            </li>\n            <li className=\"\">\n              <button onClick={this.fetchPosts}> Todos los Posts</button>\n              </li>\n          </ul>\n        </div>\n  \n          <table>\n            <thead>\n            <tr>\n              <th>Freelancer</th>\n              <th>Description</th>\n              <th>Media</th>\n              <th>Likes</th>\n              <th>Comentarios</th>\n            </tr>\n            </thead>\n            {posts}\n          </table>\n\n          <table>\n            <thead>\n            <tr>\n              <th>Freelancer</th>\n              <th>Description</th>\n              \n            </tr>\n            </thead>\n            {comments}\n          </table>\n        </div>\n      )\n  }\n}\n  \n  \nexport default Posts;"]},"metadata":{},"sourceType":"module"}