{"ast":null,"code":"async function getPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  let {\n    data,\n    links\n  } = await response.json();\n  data = Object.values(data);\n  data.map(async (post, i) => {\n    const username = await getFreelancerName(token, Object.values(post.attributes)[1]);\n    post.attributes['freelancerUsername'] = username;\n  });\n  return {\n    data,\n    links\n  };\n}\n\nasync function getTopPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts/top', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getComments(token, postId) {\n  const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n  let response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  let {\n    data\n  } = await response.json().then();\n  const username = Object.values(data.attributes)[3];\n  return username;\n}\n\nexport { getPosts, getTopPosts, getComments, getFreelancerName };","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/src/services/posts.js"],"names":["getPosts","token","response","fetch","headers","Authorization","data","links","json","Object","values","map","post","i","username","getFreelancerName","attributes","getTopPosts","getComments","postId","freelancerId","then"],"mappings":"AACA,eAAeA,QAAf,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC/DC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADsD,GAAnC,CAA5B;AAGA,MAAI;AAACK,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgB,MAAML,QAAQ,CAACM,IAAT,EAA1B;AAEAF,EAAAA,IAAI,GAAGG,MAAM,CAACC,MAAP,CAAcJ,IAAd,CAAP;AAEAA,EAAAA,IAAI,CAACK,GAAL,CAAS,OAAOC,IAAP,EAAaC,CAAb,KAAiB;AACtB,UAAMC,QAAQ,GAAG,MAAMC,iBAAiB,CAACd,KAAD,EAAQQ,MAAM,CAACC,MAAP,CAAcE,IAAI,CAACI,UAAnB,EAA+B,CAA/B,CAAR,CAAxC;AACAJ,IAAAA,IAAI,CAACI,UAAL,CAAgB,oBAAhB,IAAwCF,QAAxC;AACH,GAHD;AAKA,SAAO;AAACR,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAP;AAIH;;AAED,eAAeU,WAAf,CAA2BhB,KAA3B,EAAkC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAuC;AACnEC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAD0D,GAAvC,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAeU,WAAf,CAA2BjB,KAA3B,EAAkCkB,MAAlC,EAA0C;AACtC,QAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CgB,MAAO,EAApD,EAAsD;AAClFf,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADyE,GAAtD,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAeO,iBAAf,CAAiCd,KAAjC,EAAwCmB,YAAxC,EAAsD;AAClD,MAAIlB,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CiB,YAAa,EAA5D,EAA8D;AACxFhB,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAD+E,GAA9D,CAA1B;AAGA,MAAI;AAACK,IAAAA;AAAD,MAAS,MAAMJ,QAAQ,CAACM,IAAT,GAAgBa,IAAhB,EAAnB;AACA,QAAMP,QAAQ,GAAGL,MAAM,CAACC,MAAP,CAAcJ,IAAI,CAACU,UAAnB,EAA+B,CAA/B,CAAjB;AACA,SAAOF,QAAP;AAEH;;AAED,SAAQd,QAAR,EAAkBiB,WAAlB,EAA+BC,WAA/B,EAA4CH,iBAA5C","sourcesContent":["\nasync function getPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    let {data, links} = await response.json()\n    \n    data = Object.values(data);\n    \n    data.map(async (post, i)=>{\n        const username = await getFreelancerName(token ,Object.values(post.attributes)[1])\n        post.attributes['freelancerUsername'] = username\n    });\n\n    return {data, links}\n    \n    \n    \n}\n\nasync function getTopPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts/top',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getComments(token, postId) {\n    const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n    let response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    let {data} = await response.json().then();\n    const username = Object.values(data.attributes)[3]\n    return username\n\n}\n\nexport {getPosts, getTopPosts, getComments, getFreelancerName};"]},"metadata":{},"sourceType":"module"}