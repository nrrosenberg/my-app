{"ast":null,"code":"var JSONAPISerializer = require('jsonapi-serializer').Serializer;\n\nvar UserDeserialize = new JSONAPIDeserializer();\nUserDeserialize.deserialize(users).then(a => console.log(a));\n\nasync function getPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  Serializer.deserialize('article', data);\n  console.log(holaa);\n  return response.json();\n}\n\nasync function getTopPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts/top', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getComments(token, postId) {\n  const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n  const response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nexport { getPosts, getTopPosts, getComments, getFreelancerName };","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/src/services/posts.js"],"names":["JSONAPISerializer","require","Serializer","UserDeserialize","JSONAPIDeserializer","deserialize","users","then","a","console","log","getPosts","token","response","fetch","headers","Authorization","data","holaa","json","getTopPosts","getComments","postId","getFreelancerName","freelancerId"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,UAAtD;;AAEA,IAAIC,eAAe,GAAG,IAAIC,mBAAJ,EAAtB;AACAD,eAAe,CAACE,WAAhB,CAA4BC,KAA5B,EACCC,IADD,CACMC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CADX;;AAMA,eAAeG,QAAf,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC/DC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADsD,GAAnC,CAA5B;AAGAV,EAAAA,UAAU,CAACG,WAAX,CAAuB,SAAvB,EAAkCY,IAAlC;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACA,SAAOL,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAeC,WAAf,CAA2BR,KAA3B,EAAkC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAuC;AACnEC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAD0D,GAAvC,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAeE,WAAf,CAA2BT,KAA3B,EAAkCU,MAAlC,EAA0C;AACtC,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CQ,MAAO,EAApD,EAAsD;AAClFP,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADyE,GAAtD,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAeI,iBAAf,CAAiCX,KAAjC,EAAwCY,YAAxC,EAAsD;AAClD,QAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CU,YAAa,EAA5D,EAA8D;AAC1FT,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADiF,GAA9D,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,SAAQR,QAAR,EAAkBS,WAAlB,EAA+BC,WAA/B,EAA4CE,iBAA5C","sourcesContent":["var JSONAPISerializer = require('jsonapi-serializer').Serializer;\n\nvar UserDeserialize = new JSONAPIDeserializer();\nUserDeserialize.deserialize(users)\n.then(a => console.log(a))\n\n\n\n\nasync function getPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    Serializer.deserialize('article', data);\n    console.log(holaa)\n    return response.json();\n}\n\nasync function getTopPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts/top',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getComments(token, postId) {\n    const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n    const response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nexport {getPosts, getTopPosts, getComments, getFreelancerName};"]},"metadata":{},"sourceType":"module"}