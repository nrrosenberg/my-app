{"ast":null,"code":"'use strict';\n\nvar hasProp = require('./hasProp');\n\nvar remove = require('./remove');\n\nvar icPart = require('./icPart');\n\nfunction Inflections() {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  this.acronyms = {};\n  this.acronymRegex = /(?=a)b/;\n}\n\nInflections.getInstance = function (locale) {\n  var storage = typeof process !== 'undefined' ? process : global;\n  storage.__Inflector_Inflections = storage.__Inflector_Inflections || {};\n  storage.__Inflector_Inflections[locale] = storage.__Inflector_Inflections[locale] || new Inflections();\n  return storage.__Inflector_Inflections[locale];\n};\n\nInflections.prototype.acronym = function (word) {\n  this.acronyms[word.toLowerCase()] = word;\n  var values = [];\n\n  for (var key in this.acronyms) {\n    if (hasProp(this.acronyms, key)) {\n      values.push(this.acronyms[key]);\n    }\n  }\n\n  this.acronymRegex = new RegExp(values.join('|'));\n};\n\nInflections.prototype.plural = function (rule, replacement) {\n  if (typeof rule === 'string') {\n    remove(this.uncountables, rule);\n  }\n\n  remove(this.uncountables, replacement);\n  this.plurals.unshift([rule, replacement]);\n};\n\nInflections.prototype.singular = function (rule, replacement) {\n  if (typeof rule === 'string') {\n    remove(this.uncountables, rule);\n  }\n\n  remove(this.uncountables, replacement);\n  this.singulars.unshift([rule, replacement]);\n};\n\nInflections.prototype.irregular = function (singular, plural) {\n  remove(this.uncountables, singular);\n  remove(this.uncountables, plural);\n  var s0 = singular[0];\n  var sRest = singular.substr(1);\n  var p0 = plural[0];\n  var pRest = plural.substr(1);\n\n  if (s0.toUpperCase() === p0.toUpperCase()) {\n    this.plural(new RegExp('(' + s0 + ')' + sRest + '$', 'i'), '$1' + pRest);\n    this.plural(new RegExp('(' + p0 + ')' + pRest + '$', 'i'), '$1' + pRest);\n    this.singular(new RegExp('(' + s0 + ')' + sRest + '$', 'i'), '$1' + sRest);\n    this.singular(new RegExp('(' + p0 + ')' + pRest + '$', 'i'), '$1' + sRest);\n  } else {\n    var sRestIC = icPart(sRest);\n    var pRestIC = icPart(pRest);\n    this.plural(new RegExp(s0.toUpperCase() + sRestIC + '$'), p0.toUpperCase() + pRest);\n    this.plural(new RegExp(s0.toLowerCase() + sRestIC + '$'), p0.toLowerCase() + pRest);\n    this.plural(new RegExp(p0.toUpperCase() + pRestIC + '$'), p0.toUpperCase() + pRest);\n    this.plural(new RegExp(p0.toLowerCase() + pRestIC + '$'), p0.toLowerCase() + pRest);\n    this.singular(new RegExp(s0.toUpperCase() + sRestIC + '$'), s0.toUpperCase() + sRest);\n    this.singular(new RegExp(s0.toLowerCase() + sRestIC + '$'), s0.toLowerCase() + sRest);\n    this.singular(new RegExp(p0.toUpperCase() + pRestIC + '$'), s0.toUpperCase() + sRest);\n    this.singular(new RegExp(p0.toLowerCase() + pRestIC + '$'), s0.toLowerCase() + sRest);\n  }\n};\n\nInflections.prototype.uncountable = function () {\n  var words = Array.prototype.slice.call(arguments, 0);\n  this.uncountables = this.uncountables.concat(words);\n};\n\nInflections.prototype.human = function (rule, replacement) {\n  this.humans.unshift([rule, replacement]);\n};\n\nInflections.prototype.clear = function (scope) {\n  scope = scope || 'all';\n\n  if (scope === 'all') {\n    this.plurals = [];\n    this.singulars = [];\n    this.uncountables = [];\n    this.humans = [];\n  } else {\n    this[scope] = [];\n  }\n};\n\nmodule.exports = Inflections;","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/node_modules/inflected/lib/Inflections.js"],"names":["hasProp","require","remove","icPart","Inflections","plurals","singulars","uncountables","humans","acronyms","acronymRegex","getInstance","locale","storage","process","global","__Inflector_Inflections","prototype","acronym","word","toLowerCase","values","key","push","RegExp","join","plural","rule","replacement","unshift","singular","irregular","s0","sRest","substr","p0","pRest","toUpperCase","sRestIC","pRestIC","uncountable","words","Array","slice","call","arguments","concat","human","clear","scope","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar hasProp = require('./hasProp');\nvar remove  = require('./remove');\nvar icPart  = require('./icPart');\n\nfunction Inflections() {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  this.acronyms = {};\n  this.acronymRegex = /(?=a)b/;\n}\n\nInflections.getInstance = function(locale) {\n  var storage = typeof process !== 'undefined' ? process : global;\n  storage.__Inflector_Inflections = storage.__Inflector_Inflections || {};\n  storage.__Inflector_Inflections[locale] = storage.__Inflector_Inflections[locale] || new Inflections();\n\n  return storage.__Inflector_Inflections[locale];\n};\n\nInflections.prototype.acronym = function(word) {\n  this.acronyms[word.toLowerCase()] = word;\n\n  var values = [];\n\n  for (var key in this.acronyms) {\n    if (hasProp(this.acronyms, key)) {\n      values.push(this.acronyms[key]);\n    }\n  }\n\n  this.acronymRegex = new RegExp(values.join('|'));\n};\n\nInflections.prototype.plural = function(rule, replacement) {\n  if (typeof rule === 'string') {\n    remove(this.uncountables, rule);\n  }\n\n  remove(this.uncountables, replacement);\n  this.plurals.unshift([rule, replacement]);\n};\n\nInflections.prototype.singular = function(rule, replacement) {\n  if (typeof rule === 'string') {\n    remove(this.uncountables, rule);\n  }\n\n  remove(this.uncountables, replacement);\n  this.singulars.unshift([rule, replacement]);\n};\n\nInflections.prototype.irregular = function(singular, plural) {\n  remove(this.uncountables, singular);\n  remove(this.uncountables, plural);\n\n  var s0 = singular[0];\n  var sRest = singular.substr(1);\n\n  var p0 = plural[0];\n  var pRest = plural.substr(1);\n\n  if (s0.toUpperCase() === p0.toUpperCase()) {\n    this.plural(new RegExp('(' + s0 + ')' + sRest + '$', 'i'), '$1' + pRest);\n    this.plural(new RegExp('(' + p0 + ')' + pRest + '$', 'i'), '$1' + pRest);\n\n    this.singular(new RegExp('(' + s0 + ')' + sRest + '$', 'i'), '$1' + sRest);\n    this.singular(new RegExp('(' + p0 + ')' + pRest + '$', 'i'), '$1' + sRest);\n  } else {\n    var sRestIC = icPart(sRest);\n    var pRestIC = icPart(pRest);\n\n    this.plural(new RegExp(s0.toUpperCase() + sRestIC + '$'), p0.toUpperCase() + pRest);\n    this.plural(new RegExp(s0.toLowerCase() + sRestIC + '$'), p0.toLowerCase() + pRest);\n    this.plural(new RegExp(p0.toUpperCase() + pRestIC + '$'), p0.toUpperCase() + pRest);\n    this.plural(new RegExp(p0.toLowerCase() + pRestIC + '$'), p0.toLowerCase() + pRest);\n\n    this.singular(new RegExp(s0.toUpperCase() + sRestIC + '$'), s0.toUpperCase() + sRest);\n    this.singular(new RegExp(s0.toLowerCase() + sRestIC + '$'), s0.toLowerCase() + sRest);\n    this.singular(new RegExp(p0.toUpperCase() + pRestIC + '$'), s0.toUpperCase() + sRest);\n    this.singular(new RegExp(p0.toLowerCase() + pRestIC + '$'), s0.toLowerCase() + sRest);\n  }\n};\n\nInflections.prototype.uncountable = function() {\n  var words = Array.prototype.slice.call(arguments, 0);\n  this.uncountables = this.uncountables.concat(words);\n};\n\nInflections.prototype.human = function(rule, replacement) {\n  this.humans.unshift([rule, replacement]);\n};\n\nInflections.prototype.clear = function(scope) {\n  scope = scope || 'all';\n\n  if (scope === 'all') {\n    this.plurals = [];\n    this.singulars = [];\n    this.uncountables = [];\n    this.humans = [];\n  } else {\n    this[scope] = [];\n  }\n};\n\nmodule.exports = Inflections;\n"]},"metadata":{},"sourceType":"script"}