{"ast":null,"code":"async function getPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const {\n    data,\n    links\n  } = response.json();\n  const post_array = Object.values(data);\n  post_array.map(async post => {\n    post.attributes['freelancerUsername'] = await this.fetchFreelancerName(Object.values(post.attributes)[1]);\n  });\n  console.log();\n}\n\nasync function getTopPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts/top', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getComments(token, postId) {\n  const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n  let response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json().then();\n}\n\nexport { getPosts, getTopPosts, getComments, getFreelancerName };","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/src/services/posts.js"],"names":["getPosts","token","response","fetch","headers","Authorization","data","links","json","post_array","Object","values","map","post","attributes","fetchFreelancerName","console","log","getTopPosts","getComments","postId","getFreelancerName","freelancerId","then"],"mappings":"AACA,eAAeA,QAAf,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC/DC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADsD,GAAnC,CAA5B;AAGA,QAAM;AAACK,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBL,QAAQ,CAACM,IAAT,EAAtB;AACA,QAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAnB;AACAG,EAAAA,UAAU,CAACG,GAAX,CAAe,MAAOC,IAAP,IAAc;AACzBA,IAAAA,IAAI,CAACC,UAAL,CAAgB,oBAAhB,IAAwC,MAAM,KAAKC,mBAAL,CAAyBL,MAAM,CAACC,MAAP,CAAcE,IAAI,CAACC,UAAnB,EAA+B,CAA/B,CAAzB,CAA9C;AACH,GAFD;AAGAE,EAAAA,OAAO,CAACC,GAAR;AAGH;;AAED,eAAeC,WAAf,CAA2BjB,KAA3B,EAAkC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAuC;AACnEC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAD0D,GAAvC,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAeW,WAAf,CAA2BlB,KAA3B,EAAkCmB,MAAlC,EAA0C;AACtC,QAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CiB,MAAO,EAApD,EAAsD;AAClFhB,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADyE,GAAtD,CAA5B;AAGA,SAAOC,QAAQ,CAACM,IAAT,EAAP;AACH;;AAED,eAAea,iBAAf,CAAiCpB,KAAjC,EAAwCqB,YAAxC,EAAsD;AAClD,MAAIpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CmB,YAAa,EAA5D,EAA8D;AACxFlB,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAD+E,GAA9D,CAA1B;AAIA,SAAOC,QAAQ,CAACM,IAAT,GAAgBe,IAAhB,EAAP;AACH;;AAED,SAAQvB,QAAR,EAAkBkB,WAAlB,EAA+BC,WAA/B,EAA4CE,iBAA5C","sourcesContent":["\nasync function getPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    const {data, links} = response.json()\n    const post_array = Object.values(data);\n    post_array.map(async (post)=>{\n        post.attributes['freelancerUsername'] = await this.fetchFreelancerName(Object.values(post.attributes)[1])\n    });\n    console.log()\n    \n    \n}\n\nasync function getTopPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts/top',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getComments(token, postId) {\n    const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n    let response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    \n    return response.json().then();\n}\n\nexport {getPosts, getTopPosts, getComments, getFreelancerName};"]},"metadata":{},"sourceType":"module"}