{"ast":null,"code":"var JSONAPIDeserializer = require('jsonapi-serializer').Deserializer;\n\nvar UserDeserialize = new JSONAPIDeserializer();\n\nasync function getPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const a = response.json().then(a => UserDeserialize.deserialize(response.json()));\n  console.log(a); //UserDeserialize.deserialize(response.json()).then(a => console.log(a))\n  //return response.json();\n}\n\nasync function getTopPosts(token) {\n  const response = await fetch('http://localhost:3000/api/posts/top', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getComments(token, postId) {\n  const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n  const response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\nexport { getPosts, getTopPosts, getComments, getFreelancerName };","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/src/services/posts.js"],"names":["JSONAPIDeserializer","require","Deserializer","UserDeserialize","getPosts","token","response","fetch","headers","Authorization","a","json","then","deserialize","console","log","getTopPosts","getComments","postId","getFreelancerName","freelancerId"],"mappings":"AAAA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,YAAxD;;AAEA,IAAIC,eAAe,GAAG,IAAIH,mBAAJ,EAAtB;;AAMA,eAAeI,QAAf,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC/DC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADsD,GAAnC,CAA5B;AAGA,QAAMK,CAAC,GAAGJ,QAAQ,CAACK,IAAT,GAAgBC,IAAhB,CAAqBF,CAAC,IAAGP,eAAe,CAACU,WAAhB,CAA4BP,QAAQ,CAACK,IAAT,EAA5B,CAAzB,CAAV;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ,EAL2B,CAM3B;AACA;AACH;;AAED,eAAeM,WAAf,CAA2BX,KAA3B,EAAkC;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAuC;AACnEC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAD0D,GAAvC,CAA5B;AAGA,SAAOC,QAAQ,CAACK,IAAT,EAAP;AACH;;AAED,eAAeM,WAAf,CAA2BZ,KAA3B,EAAkCa,MAAlC,EAA0C;AACtC,QAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CW,MAAO,EAApD,EAAsD;AAClFV,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADyE,GAAtD,CAA5B;AAGA,SAAOC,QAAQ,CAACK,IAAT,EAAP;AACH;;AAED,eAAeQ,iBAAf,CAAiCd,KAAjC,EAAwCe,YAAxC,EAAsD;AAClD,QAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6Ca,YAAa,EAA5D,EAA8D;AAC1FZ,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AADiF,GAA9D,CAA5B;AAGA,SAAOC,QAAQ,CAACK,IAAT,EAAP;AACH;;AAED,SAAQP,QAAR,EAAkBY,WAAlB,EAA+BC,WAA/B,EAA4CE,iBAA5C","sourcesContent":["var JSONAPIDeserializer = require('jsonapi-serializer').Deserializer;\n\nvar UserDeserialize = new JSONAPIDeserializer();\n\n\n\n\n\nasync function getPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    const a = response.json().then(a =>UserDeserialize.deserialize(response.json()))\n    console.log(a)\n    //UserDeserialize.deserialize(response.json()).then(a => console.log(a))\n    //return response.json();\n}\n\nasync function getTopPosts(token) {\n    const response = await fetch('http://localhost:3000/api/posts/top',{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getComments(token, postId) {\n    const response = await fetch(`http://localhost:3000/api/posts/comments/${postId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nasync function getFreelancerName(token, freelancerId) {\n    const response = await fetch(`http://localhost:3000/api/freelancers/show/${freelancerId}`,{\n    headers: {Authorization: `Bearer ${token}`} \n    });\n    return response.json();\n}\n\nexport {getPosts, getTopPosts, getComments, getFreelancerName};"]},"metadata":{},"sourceType":"module"}