{"ast":null,"code":"'use strict';\n\nvar Inflections = require('./Inflections');\n\nvar Transliterator = require('./Transliterator');\n\nvar Methods = require('./Methods');\n\nvar defaults = require('./defaults');\n\nvar isFunc = require('./isFunc');\n\nvar Inflector = Methods;\n\nInflector.inflections = function (locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || 'en';\n\n  if (fn) {\n    fn(Inflections.getInstance(locale));\n  } else {\n    return Inflections.getInstance(locale);\n  }\n};\n\nInflector.transliterations = function (locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || 'en';\n\n  if (fn) {\n    fn(Transliterator.getInstance(locale));\n  } else {\n    return Transliterator.getInstance(locale);\n  }\n};\n\nfor (var locale in defaults) {\n  Inflector.inflections(locale, defaults[locale]);\n}\n\nmodule.exports = Inflector;","map":{"version":3,"sources":["/Users/nicorosenberg/Desktop/grupo-belicooo/my-app/node_modules/inflected/lib/Inflector.js"],"names":["Inflections","require","Transliterator","Methods","defaults","isFunc","Inflector","inflections","locale","fn","getInstance","transliterations","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAOC,OAAO,CAAC,eAAD,CAA7B;;AACA,IAAIC,cAAc,GAAID,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAIE,OAAO,GAAWF,OAAO,CAAC,WAAD,CAA7B;;AACA,IAAIG,QAAQ,GAAUH,OAAO,CAAC,YAAD,CAA7B;;AACA,IAAII,MAAM,GAAYJ,OAAO,CAAC,UAAD,CAA7B;;AAEA,IAAIK,SAAS,GAAGH,OAAhB;;AAEAG,SAAS,CAACC,WAAV,GAAwB,UAASC,MAAT,EAAiBC,EAAjB,EAAqB;AAC3C,MAAIJ,MAAM,CAACG,MAAD,CAAV,EAAoB;AAClBC,IAAAA,EAAE,GAAGD,MAAL;AACAA,IAAAA,MAAM,GAAG,IAAT;AACD;;AAEDA,EAAAA,MAAM,GAAGA,MAAM,IAAI,IAAnB;;AAEA,MAAIC,EAAJ,EAAQ;AACNA,IAAAA,EAAE,CAACT,WAAW,CAACU,WAAZ,CAAwBF,MAAxB,CAAD,CAAF;AACD,GAFD,MAEO;AACL,WAAOR,WAAW,CAACU,WAAZ,CAAwBF,MAAxB,CAAP;AACD;AACF,CAbD;;AAeAF,SAAS,CAACK,gBAAV,GAA6B,UAASH,MAAT,EAAiBC,EAAjB,EAAqB;AAChD,MAAIJ,MAAM,CAACG,MAAD,CAAV,EAAoB;AAClBC,IAAAA,EAAE,GAAGD,MAAL;AACAA,IAAAA,MAAM,GAAG,IAAT;AACD;;AAEDA,EAAAA,MAAM,GAAGA,MAAM,IAAI,IAAnB;;AAEA,MAAIC,EAAJ,EAAQ;AACNA,IAAAA,EAAE,CAACP,cAAc,CAACQ,WAAf,CAA2BF,MAA3B,CAAD,CAAF;AACD,GAFD,MAEO;AACL,WAAON,cAAc,CAACQ,WAAf,CAA2BF,MAA3B,CAAP;AACD;AACF,CAbD;;AAeA,KAAK,IAAIA,MAAT,IAAmBJ,QAAnB,EAA6B;AAC3BE,EAAAA,SAAS,CAACC,WAAV,CAAsBC,MAAtB,EAA8BJ,QAAQ,CAACI,MAAD,CAAtC;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBP,SAAjB","sourcesContent":["'use strict';\n\nvar Inflections     = require('./Inflections');\nvar Transliterator  = require('./Transliterator');\nvar Methods         = require('./Methods');\nvar defaults        = require('./defaults');\nvar isFunc          = require('./isFunc');\n\nvar Inflector = Methods;\n\nInflector.inflections = function(locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || 'en';\n\n  if (fn) {\n    fn(Inflections.getInstance(locale));\n  } else {\n    return Inflections.getInstance(locale);\n  }\n};\n\nInflector.transliterations = function(locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || 'en';\n\n  if (fn) {\n    fn(Transliterator.getInstance(locale));\n  } else {\n    return Transliterator.getInstance(locale);\n  }\n}\n\nfor (var locale in defaults) {\n  Inflector.inflections(locale, defaults[locale]);\n}\n\nmodule.exports = Inflector;\n"]},"metadata":{},"sourceType":"script"}